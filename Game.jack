class Game {
    
    field int direction; // 0=none, 1=up, 2=down, 3=left, 4=right
    field Player player;
    field Board board;

    constructor Game new() {
        let player = Player.new(0, 250, 50, 255);
        let board = Board.new();
        let direction = 0;  // initial state is no movement
        return this;
    }

    method void dispose() {
        // do snake.dispose();
        do Memory.deAlloc(this);
        return;
    }

    method void moveplayer() {
        if (direction = 3) { do player.moveLeft(); }
        if (direction = 4) { do player.moveRight(); }
        do Sys.wait(5);  // delays the next movement
        return;
    }


    /** Runs the game: handles the user's inputs and moves the player accordingly */
   method void run() {
    var Bullet bullet;
    var char key;  // the key currently pressed by the user
    var boolean exit;
    let exit = false;
    
    while (~exit) {


        let direction = 0;

        while (key = 0) {
          let key = Keyboard.keyPressed();

          if(board.isOver()) {
                let exit = true;
            }

          if(~(player.getBullet() = null)) {

            if(board.bulletHasTouchedAnyEnemy(player.getBullet()) = true) {
                let bullet = player.getBullet();
                do bullet.setReachedTopOrEnemy(true);
            }

          }

          do player.checkBulletStatus();

          if(player.hasShot() = true) {
                do player.moveBullet();
                do Sys.wait(5);  // delays the next movement
            }

        }

        // if (key = 81)  { let exit = true; }     // q key
        if (key = 130) { let direction = 3; }   // left arrow
        if (key = 132) { let direction = 4; }   // right arrow
        if (key = 81)  {

            if(player.hasShot() = false) {
                do player.shoot(); 
                
            }

        }    

       while (~(key = 0)) {
          let key = Keyboard.keyPressed(); 

          if(board.isOver()) {
                let exit = true;
            }
        
          if(~(player.getBullet() = null)) {

            if(board.bulletHasTouchedAnyEnemy(player.getBullet()) = true) {
                let bullet = player.getBullet();
                do bullet.setReachedTopOrEnemy(true);
            }
            
          }

          do player.checkBulletStatus();

          if(player.hasShot() = true) {
                do player.moveBullet();
                do Sys.wait(5);  // delays the next movement

            }

          do moveplayer();
        }


    }
    return;

}

  

}