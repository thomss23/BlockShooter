function Board.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push pointer 0
call Board.drawBoard 1
pop temp 0
push pointer 0
call Board.initEnemies 1
pop temp 0
push pointer 0
return
function Board.initEnemies 0
push argument 0
pop pointer 0
push constant 5
call Array.new 1
pop this 0
push constant 5
call Array.new 1
pop this 1
push constant 5
call Array.new 1
pop this 2
push constant 0
push this 0
add
push constant 10
push constant 10
push constant 30
call Enemy.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 0
add
push constant 110
push constant 10
push constant 30
call Enemy.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 0
add
push constant 210
push constant 10
push constant 30
call Enemy.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push this 0
add
push constant 310
push constant 10
push constant 30
call Enemy.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push this 0
add
push constant 410
push constant 10
push constant 30
call Enemy.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push this 1
add
push constant 10
push constant 80
push constant 30
call Enemy.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 1
add
push constant 110
push constant 80
push constant 30
call Enemy.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 1
add
push constant 210
push constant 80
push constant 30
call Enemy.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push this 1
add
push constant 310
push constant 80
push constant 30
call Enemy.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push this 1
add
push constant 410
push constant 80
push constant 30
call Enemy.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push this 2
add
push constant 10
push constant 150
push constant 30
call Enemy.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 2
add
push constant 110
push constant 150
push constant 30
call Enemy.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 2
add
push constant 210
push constant 150
push constant 30
call Enemy.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push this 2
add
push constant 310
push constant 150
push constant 30
call Enemy.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push this 2
add
push constant 410
push constant 150
push constant 30
call Enemy.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Board.bulletHasTouchedAnyEnemy 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 5
lt
not
if-goto WHILE_END0
push local 0
push this 2
add
pop pointer 1
push that 0
pop local 1
push local 1
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push argument 1
call Bullet.getX1 1
push argument 1
call Bullet.getY1 1
push local 0
push this 2
add
pop pointer 1
push that 0
call Board.hasTouched 4
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
call Enemy.dispose 1
pop temp 0
push argument 1
call Bullet.erase 1
pop temp 0
push local 0
push this 2
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
not
return
label IF_FALSE1
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 0
label WHILE_EXP1
push local 0
push constant 5
lt
not
if-goto WHILE_END1
push local 0
push this 1
add
pop pointer 1
push that 0
pop local 1
push local 1
push constant 0
eq
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push argument 1
call Bullet.getX1 1
push argument 1
call Bullet.getY1 1
push local 0
push this 1
add
pop pointer 1
push that 0
call Board.hasTouched 4
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 1
call Enemy.dispose 1
pop temp 0
push argument 1
call Bullet.erase 1
pop temp 0
push local 0
push this 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
not
return
label IF_FALSE3
label IF_FALSE2
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push constant 0
pop local 0
label WHILE_EXP2
push local 0
push constant 5
lt
not
if-goto WHILE_END2
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
push constant 0
eq
not
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push pointer 0
push argument 1
call Bullet.getX1 1
push argument 1
call Bullet.getY1 1
push local 0
push this 0
add
pop pointer 1
push that 0
call Board.hasTouched 4
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 1
call Enemy.dispose 1
pop temp 0
push argument 1
call Bullet.erase 1
pop temp 0
push local 0
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
not
return
label IF_FALSE5
label IF_FALSE4
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP2
label WHILE_END2
push constant 0
return
function Board.isOver 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 5
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push local 0
push this 1
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push local 0
push this 2
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
return
label IF_FALSE2
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
not
return
function Board.hasTouched 4
push argument 0
pop pointer 0
push argument 3
call Enemy.getX 1
pop local 0
push argument 3
call Enemy.getY 1
push argument 3
call Enemy.getSize 1
add
pop local 1
push argument 3
call Enemy.getX 1
push argument 3
call Enemy.getSize 1
add
pop local 2
push argument 3
call Enemy.getY 1
push argument 3
call Enemy.getSize 1
add
pop local 3
push argument 2
push local 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push local 0
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
push local 2
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 3
call Enemy.erase 1
pop temp 0
push constant 0
not
return
label IF_FALSE2
label IF_FALSE1
label IF_FALSE0
push constant 0
return
function Board.drawBoard 0
push argument 0
pop pointer 0
push constant 0
push constant 0
push constant 511
push constant 0
call Screen.drawLine 4
pop temp 0
push constant 0
push constant 0
push constant 0
push constant 255
call Screen.drawLine 4
pop temp 0
push constant 0
push constant 255
push constant 511
push constant 255
call Screen.drawLine 4
pop temp 0
push constant 511
push constant 255
push constant 511
push constant 0
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Board.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Board.dist2Points 0
push argument 0
pop pointer 0
push argument 1
push argument 3
sub
push argument 1
push argument 3
sub
call Math.multiply 2
push argument 2
push argument 4
sub
add
push argument 2
push argument 4
sub
call Math.multiply 2
call Math.sqrt 1
return
